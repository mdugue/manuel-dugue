name: Lighthouse CI
on: push
jobs:
  types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set Up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: check types
        run: pnpm run tsc
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set Up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: build app
        run: TEST_SECRET="${{secrets.TEST_SECRET}}" TEST2="This is a simple test" pnpm run build
        env:
          GOOGLE_SHEETS_AUTH: ${{secrets.GOOGLE_SHEETS_AUTH}}
          GOOGLE_SHEET_CV_ID: ${{secrets.GOOGLE_SHEET_CV_ID}}
          GOOGLE_SHEET_SKILL_PROFILE_ID: ${{secrets.GOOGLE_SHEET_SKILL_PROFILE_ID}}
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v7
        with:
          configPath: 'lighthouserc.js'
          uploadArtifacts: true # save results as an action artifacts
          serverBaseUrl: 'https://manuelfyi-lhci.herokuapp.com'
          serverToken: ${{secrets.LHCI_SERVER_TOKEN}}
        env:
          GOOGLE_SHEETS_AUTH: ${{secrets.GOOGLE_SHEETS_AUTH}}
          GOOGLE_SHEET_CV_ID: ${{secrets.GOOGLE_SHEET_CV_ID}}
          GOOGLE_SHEET_SKILL_PROFILE_ID: ${{secrets.GOOGLE_SHEET_SKILL_PROFILE_ID}}
          LHCI_GITHUB_APP_TOKEN: ${{secrets.LHCI_GITHUB_APP_TOKEN}}
